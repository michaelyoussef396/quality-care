# Nginx configuration for Quality Care NDIS Website
# Optimized for React + Vite SPA deployment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.builder.io https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob: https://cdn.builder.io https://api.builder.io; connect-src 'self' https://www.google-analytics.com https://api.builder.io; frame-ancestors 'self';" always;
    
    # Cache settings
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1y;
        application/javascript     1y;
        application/woff2          1y;
        ~image/                    1M;
        application/pdf            1M;
    }
    expires $expires;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=contact:10m rate=1r/s;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint (must be before other locations)
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|webp|avif|svg|woff|woff2|ttf|eot|ico)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # Handle CORS for fonts
            if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
                add_header Access-Control-Allow-Origin "*";
            }
            
            # Try to serve file directly, fallback to 404
            try_files $uri =404;
        }

        # Service Worker - no caching
        location = /sw.js {
            expires epoch;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            try_files $uri =404;
        }

        # Web App Manifest
        location = /site.webmanifest {
            expires 1d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }

        # Robots.txt
        location = /robots.txt {
            expires 1d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }

        # Favicon
        location = /favicon.ico {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            try_files $uri =404;
        }

        # API endpoints (for future server-side features)
        location /api/ {
            limit_req zone=general burst=20 nodelay;
            
            # Return 404 for now since we don't have a backend server
            return 404;
        }

        # Special rate limiting for contact form
        location /api/contact {
            limit_req zone=contact burst=5 nodelay;
            return 404;
        }

        # Root and SPA routing - all other routes go to index.html
        location / {
            # Apply general rate limiting
            limit_req zone=general burst=50 nodelay;
            
            # Try to serve request as file, then as directory, finally fallback to index.html for SPA
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML pages
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to development files
        location ~* \.(yml|yaml|conf|log|md|txt)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages - fallback to index.html for SPA
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
}